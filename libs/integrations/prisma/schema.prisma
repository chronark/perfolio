datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")

}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

enum Plan {
  TRIAL
  PRO
}



model User {
  // AUth0 provided user id
  id            String    @id

  stripeCustomerId String @unique

  settings             UserSettings?

  subscription Subscription?

}

model Subscription {
  id String @id @default(uuid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)


  currentPaymentPeriodStart DateTime?
  currentPaymentPeriodEnd   DateTime?
  stripeSubscriptionId      String?   @unique

  // Only populated when the user has not payed yet
  trialEnds DateTime?

  plan Plan @default(TRIAL)

}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assetId String

  executedAt Int
  volume     Float
  value      Float

  // user User @relation(fields: [userId], references:[id],onDelete: Cascade)
  userId String
}

enum Currency {
  EUR
}

model UserSettings {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique

  defaultCurrency    Currency
  defaultExchangeMic String
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StockMap {
  ticker String @id
  isin   String @unique
  name   String @unique
}
