datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")

}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}



model User {
  // Auth0 provided user id
  id    String @id
  email String @unique

  stripeCustomerId String @unique

  settings Settings?

  notifications Notification[]

  portfolios Portfolio[]
}

// Notifications can be displayed for a user
// Such as upcoming payments etc.
model Notification {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  readAt DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  // Use to create a notification which should not be displayed right away.
  visibleAfter  DateTime?
  visibleBefore DateTime?

  message String

}

model Transaction {
  id          String    @id
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  assetId     String
  executedAt  Int
  volume      Float
  value       Float
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  portfolioId String
}

enum Currency {
  EUR
}

model Settings {
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  defaultCurrency    Currency
  defaultExchangeMic String
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String   @unique
}

model StockMap {
  ticker String @id
  isin   String @unique
  name   String @unique
}

enum Access {
  PUBLIC
  PRIVATE
}

model Portfolio {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Human readable name for the portfolio
  name String


  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String


  // The primary portfolio will be displayed by default
  primary Boolean @default(false)


  // Public portfolios can be seen by anyone with the portfolio id
  // Private portfolios are only visible to the owner and users who were
  // granted access.
  access Access @default(PRIVATE)

  // Ids of users who have read access for this portfolio
  grantReadAccess String[]

  transactions Transaction[]
}
