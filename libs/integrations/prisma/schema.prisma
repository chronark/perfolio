datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")

}

generator client {
  provider = "prisma-client-js"
}

enum Plan {
  TRIAL
  PRO
}

model Session {
  id           String   @id @default(uuid())
  userId       String   @unique
  expires      DateTime
  // sha256 of session token
  sessionToken String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String?  @unique
  session   Session?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stripeCustomerId String? @unique

  payedUntil DateTime @default(now())
  plan       Plan     @default(TRIAL)
}

model AuthenticationRequest {
  id String @id @default(uuid())

  // Hash of the email where the request is sent to
  identifier String @unique

  // We send a 6 digit number to the user
  // this is the hash of it
  token     String
  expires   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assetId String

  executedAt Int
  volume     Float
  value      Float

  // user User @relation(fields: [userId], references:[id])
  userId String
}

enum Currency {
  EUR
}

model UserSettings {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique

  defaultCurrency    Currency
  defaultExchangeMic String
}

model StockMap {
  ticker String @id
  isin   String @unique
  name   String @unique
}
