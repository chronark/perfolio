generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           String    @default("USER")
  sessions       Session[]
  tokens         Token[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
  userId             String?
  user               User?     @relation(fields: [userId], references: [id])
}

model Token {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String
  userId      String
  user        User      @relation(fields: [userId], references: [id])

  @@unique([hashedToken, type])
}

model Company {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  isin           String   @unique
  symbol         String   @unique
  logo           String
  name           String
  exchange       String?
  industry       String?
  website        String?
  description    String
  ceo            String?
  issueType      String?
  sector         String?
  employees      Int?
  securityName   String?
  primarySICCode Int?
  address        String?
  address2       String?
  state          String?
  city           String?
  zip            String?
  country        String?
  phone          String?
}

model Transaction {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  assetId    String
  volume     Float
  value      Float
  executedAt Int
}

model Price {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isin      String
  time      Int
  value     Float

  @@id([isin, time])
}

enum TokenType {
  RESET_PASSWORD
}
